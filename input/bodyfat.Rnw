The first example is a continuous regression model, where both the response and the covariates
are measured on a numeric scale. The model is illustrated with the \textit{bodyfat} available in 
the mboost LINK package. 
\subsection*{The data set}
The data set contains observations of 71 healthy women. The measurements contain body fat, which 
is measured by DXA (Dual-energy X-ray absorptiometry), a method to determine the amount of body fat. 
Other variables in the data set are anthropometric measurements like the breadth of the knee, the waist circumference, the hip circumference etc.. 
The objective is to predict the body fat with the anthropometric measurements, because the DXA method is more expensive and 
not always available.  
\subsection*{The test statistic}
Bodyfat measured by DXA as well as body measurements are numeric variables. Thus one possible choice for the
influence function $h$ and the transformation function $g_j, \quad \forall j \in 1, \dots, m$ is the identity function, which means
the variables will not be transformed at all.  \\
Thus: 
\[h = \mathbf{Y}_i\]
\[g = \mathbf{X}_i\]
This yields following not-standardized test statistic: 
\[\mathbf{T}_{j}(\mathcal{L}_n, \mathbf{w}) = \sum\limits_{i=1}^n w_i \mathbf{X}_{ij} \mathbf{Y}_i  = \sum\limits_{i:node} \mathbf{X}_{ij} \mathbf{Y}_i\]
The next step is to standardize the test statistic: 
\[c_{max}(\mathbf{t}, \mu, \Sigma)  =  \max_{k=1, \dots, pq}\left|\frac{(t - \mu)_k}{\sqrt{(\Sigma)_{kk}}}\right|  = 
\left|\frac{t-\mu}{\sqrt{\Sigma}}\right| \]
With LINK TO MU AND SIGMA FORMULA :  \\
CORRECT INDICES
\begin{align}
  \mu_j & = \sum\limits_{i = 1}^n X_{ij} \mathbb{E}(h|S) = n \cdot \bar{X}_j \bar{Y}\\ 
 \Sigma & = \frac{n_{node}}{n_{node} - 1} \mathbb{V}(h) \cdot \sum\limits_{i=1}^n X_{ij}^2 - \frac{1}{n_{node} - 1} \mathbb{V}(h) n_{node}^2 \bar{X}_j^2 \\
        & = \frac{1}{n_{node}} \sum\limits_{i = 1}^n (Y_i - \bar{Y})^2 \sum\limits_{i=1}^n X_{ij}^2 - \frac{1}{n_{node} - 1} \cdot \frac{1}{n_{node}} \sum\limits_{i = 1}^n (Y_i - \bar{Y})^2 n_{node}^2 \bar{X}_j^2 \\
        & = \frac{1}{n_{node} - 1} \sum\limits_{i=1}^n(Y_i - \bar{Y})^2 (\sum\limits_{i = 1}^n X_{ij}^2 - n_{node} \bar{X}_j^2)  \\
        & = \frac{1}{n_{node} - 1} \left(\sum\limits_{i = 1}^n (Y_i - \bar{Y})^2\right) \left( \sum\limits_{i = 1}^n (X_{ij} - \bar{X})^2\right)   
\end{align}
Therefore: 
\[c
\propto 
\left| \frac{\sum\limits_{i:node} X_{ij} Y_i - n_{node} \bar{X}_j \bar{Y}}{\sqrt{
    \left(\sum\limits_{i:node}(Y_i - \bar{Y})^2\right)\left(\sum\limits_{i:node} (X_{ij} - \bar{X}_j)^2\right)}} \right|\]
  

The linear test statistic is proportional to the pearson correlation coefficient. This means, that the permutation test tests 
if the correlation between $Y$ and any $X_j$ is different than 0. Thus by choosing the identity function for $h$ and $g_j$ the null 
hypothesis of independence between $Y$ and $X_j$ is formulated as ``The correlation between $Y$ and $X_j$ is zero''.  \\ 
The next step is to calculate the test statistic (the pearson correlation coefficient multiplied with a constant) for the 
observation in the current partition (where $w \neq 0$). 
The response of the observations will be permutated and the test statistic calculated again. This will be done often enough to 
approximate the distribution of the test statistic for the sample. If the correlation coefficient of the original data is 
very extreme compared to the permutated test statistics, the p-value will be very low. \\
The procedure of calculating the test statistic for the original data and the permutations is done for every 
covariate $X_j, \quad j \in 1, \dots, m$ seperatly. \\ 

\subsection*{R-Code}
The data set for the example is available in the mboost LINK package. 
In addition to the response DEXfat it contains the nine body measurements. 
<<bodyfat-data>>=
data(bodyfat, package = "mboost")
head(bodyfat)
@ 

The conditional tree algorithm is implemented in the party package LINK, which is available on CRAN LINK. 
The usage is similiar to the \lstinline{lm()}-function, with the formula interface. 
The formula \lstinline{DEXfat ~ . } means that the tree should modell the response DEXfat (bodyfat measurement) 
depending on all available covariates. 
<<bodyfat-cond-model, message = FALSE>>=
library("party")
## fit a conditional tree
cond_tree <- ctree(DEXfat ~ ., data = bodyfat)
@
The result is a tree with six terminal nodes (five splits). The variable chosen for the first split is \lstinline{hipcirc}, the circumference of the hip in cm. If it is bigger than 108cm the next measurement to look at is the breadth of the knee (\lstinline{kneebreadth}). If the breadth is smaller than 10.6 cm the estimated is 39.7, which is equal to the mean in this terminal node. 
<<bodyfat-plot-ctree, out.width = "12cm", out.extra = "trim = 3cm 0cm 0cm 1cm", fig.width = 14, fig.height = 8, cache = FALSE>>=
plot(cond_tree)
@ 

The CART algorithm gives us a different tree. 

<<bodyfat-rpart, out.extra  = "trim = 0cm 4cm 0cm 4cm", cache = FALSE, fig.width = 14, fig.height = 8, cache = FALSE>>=
library("rpart")
library("partykit")
cart <- rpart(DEXfat ~ ., data = bodyfat)
plot(as.party(cart))
@
